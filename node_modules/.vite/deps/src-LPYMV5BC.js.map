{
  "version": 3,
  "sources": ["browser-external:node:events", "../../formidable/src/PersistentFile.js", "../../formidable/src/VolatileFile.js", "browser-external:node:string_decoder", "../../hexoid/dist/index.mjs", "../../wrappy/wrappy.js", "../../once/once.js", "../../asap/browser-raw.js", "../../asap/browser-asap.js", "../../dezalgo/dezalgo.js", "browser-external:node:stream", "../../formidable/src/parsers/OctetStream.js", "../../formidable/src/plugins/octetstream.js", "../../formidable/src/parsers/Querystring.js", "../../formidable/src/plugins/querystring.js", "../../formidable/src/FormidableError.js", "../../formidable/src/parsers/Multipart.js", "../../formidable/src/plugins/multipart.js", "../../formidable/src/parsers/JSON.js", "../../formidable/src/plugins/json.js", "../../formidable/src/plugins/index.js", "../../formidable/src/parsers/Dummy.js", "../../formidable/src/Formidable.js", "../../formidable/src/parsers/index.js", "../../formidable/src/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:events\" has been externalized for browser compatibility. Cannot access \"node:events.${key}\" in client code.`)\n    }\n  }\n}))", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport fs from 'node:fs';\r\nimport crypto from 'node:crypto';\r\nimport { EventEmitter } from 'node:events';\r\n\r\nclass PersistentFile extends EventEmitter {\r\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm }) {\r\n    super();\r\n\r\n    this.lastModifiedDate = null;\r\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm });\r\n\r\n    this.size = 0;\r\n    this._writeStream = null;\r\n\r\n    if (typeof this.hashAlgorithm === 'string') {\r\n      this.hash = crypto.createHash(this.hashAlgorithm);\r\n    } else {\r\n      this.hash = null;\r\n    }\r\n  }\r\n\r\n  open() {\r\n    this._writeStream = fs.createWriteStream(this.filepath);\r\n    this._writeStream.on('error', (err) => {\r\n      this.emit('error', err);\r\n    });\r\n  }\r\n\r\n  toJSON() {\r\n    const json = {\r\n      size: this.size,\r\n      filepath: this.filepath,\r\n      newFilename: this.newFilename,\r\n      mimetype: this.mimetype,\r\n      mtime: this.lastModifiedDate,\r\n      length: this.length,\r\n      originalFilename: this.originalFilename,\r\n    };\r\n    if (this.hash && this.hash !== '') {\r\n      json.hash = this.hash;\r\n    }\r\n    return json;\r\n  }\r\n\r\n  toString() {\r\n    return `PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`;\r\n  }\r\n\r\n  write(buffer, cb) {\r\n    if (this.hash) {\r\n      this.hash.update(buffer);\r\n    }\r\n\r\n    if (this._writeStream.closed) {\r\n      cb();\r\n      return;\r\n    }\r\n\r\n    this._writeStream.write(buffer, () => {\r\n      this.lastModifiedDate = new Date();\r\n      this.size += buffer.length;\r\n      this.emit('progress', this.size);\r\n      cb();\r\n    });\r\n  }\r\n\r\n  end(cb) {\r\n    if (this.hash) {\r\n      this.hash = this.hash.digest('hex');\r\n    }\r\n    this._writeStream.end(() => {\r\n      this.emit('end');\r\n      cb();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this._writeStream.destroy();\r\n    const filepath = this.filepath; \r\n    setTimeout(function () {\r\n        fs.unlink(filepath, () => {});\r\n    }, 1)\r\n  }\r\n}\r\n\r\nexport default PersistentFile;\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport { createHash } from 'node:crypto';\r\nimport { EventEmitter } from 'node:events';\r\n\r\nclass VolatileFile extends EventEmitter {\r\n  constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream }) {\r\n    super();\r\n\r\n    this.lastModifiedDate = null;\r\n    Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream });\r\n\r\n    this.size = 0;\r\n    this._writeStream = null;\r\n\r\n    if (typeof this.hashAlgorithm === 'string') {\r\n      this.hash = createHash(this.hashAlgorithm);\r\n    } else {\r\n      this.hash = null;\r\n    }\r\n  }\r\n\r\n  open() {\r\n    this._writeStream = this.createFileWriteStream(this);\r\n    this._writeStream.on('error', (err) => {\r\n      this.emit('error', err);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this._writeStream.destroy();\r\n  }\r\n\r\n  toJSON() {\r\n    const json = {\r\n      size: this.size,\r\n      newFilename: this.newFilename,\r\n      length: this.length,\r\n      originalFilename: this.originalFilename,\r\n      mimetype: this.mimetype,\r\n    };\r\n    if (this.hash && this.hash !== '') {\r\n      json.hash = this.hash;\r\n    }\r\n    return json;\r\n  }\r\n\r\n  toString() {\r\n    return `VolatileFile: ${this.originalFilename}`;\r\n  }\r\n\r\n  write(buffer, cb) {\r\n    if (this.hash) {\r\n      this.hash.update(buffer);\r\n    }\r\n\r\n    if (this._writeStream.closed || this._writeStream.destroyed) {\r\n      cb();\r\n      return;\r\n    }\r\n\r\n    this._writeStream.write(buffer, () => {\r\n      this.size += buffer.length;\r\n      this.emit('progress', this.size);\r\n      cb();\r\n    });\r\n  }\r\n\r\n  end(cb) {\r\n    if (this.hash) {\r\n      this.hash = this.hash.digest('hex');\r\n    }\r\n    this._writeStream.end(() => {\r\n      this.emit('end');\r\n      cb();\r\n    });\r\n  }\r\n}\r\n\r\nexport default VolatileFile;\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:string_decoder\" has been externalized for browser compatibility. Cannot access \"node:string_decoder.${key}\" in client code.`)\n    }\n  }\n}))", "var IDX=256, HEX=[];\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nexport default function (len) {\n\tlen = len || 16;\n\tvar str='', num=0;\n\treturn function () {\n\t\tif (!str || num === 256) {\n\t\t\tstr=''; num=(1+len)/2 | 0;\n\t\t\twhile (num--) str += HEX[256 * Math.random() | 0];\n\t\t\tstr = str.substring(num=0, len-2);\n\t\t}\n\t\treturn str + HEX[num++];\n\t};\n}\n", "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js\u2019s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n", "\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(dezalgo)\n\nvar asap = require('asap')\n\nfunction dezalgo (cb) {\n  var sync = true\n  asap(function () {\n    sync = false\n  })\n\n  return function zalgoSafe() {\n    var args = arguments\n    var me = this\n    if (sync)\n      asap(function() {\n        cb.apply(me, args)\n      })\n    else\n      cb.apply(me, args)\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:stream\" has been externalized for browser compatibility. Cannot access \"node:stream.${key}\" in client code.`)\n    }\n  }\n}))", "import { PassThrough } from 'node:stream';\r\n\r\nclass OctetStreamParser extends PassThrough {\r\n  constructor(options = {}) {\r\n    super();\r\n    this.globalOptions = { ...options };\r\n  }\r\n}\r\n\r\nexport default OctetStreamParser;\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport OctetStreamParser from '../parsers/OctetStream.js';\r\n\r\nexport const octetStreamType = 'octet-stream';\r\n// the `options` is also available through the `options` / `formidable.options`\r\nexport default function plugin(formidable, options) {\r\n  // the `this` context is always formidable, as the first argument of a plugin\r\n  // but this allows us to customize/test each plugin\r\n\r\n  /* istanbul ignore next */\r\n  const self = this || formidable;\r\n\r\n  if (/octet-stream/i.test(self.headers['content-type'])) {\r\n    init.call(self, self, options);\r\n  }\r\n  return self;\r\n}\r\n\r\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\r\n// of the passed `options` (second) param, because when you decide\r\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\r\nfunction init(_self, _opts) {\r\n  this.type = octetStreamType;\r\n  const originalFilename = this.headers['x-file-name'];\r\n  const mimetype = this.headers['content-type'];\r\n\r\n  const thisPart = {\r\n    originalFilename,\r\n    mimetype,\r\n  };\r\n  const newFilename = this._getNewName(thisPart);\r\n  const filepath = this._joinDirectoryName(newFilename);\r\n  const file = this._newFile({\r\n    newFilename,\r\n    filepath,\r\n    originalFilename,\r\n    mimetype,\r\n  });\r\n\r\n  this.emit('fileBegin', originalFilename, file);\r\n  file.open();\r\n  this.openedFiles.push(file);\r\n  this._flushing += 1;\r\n\r\n  this._parser = new OctetStreamParser(this.options);\r\n\r\n  // Keep track of writes that haven't finished so we don't emit the file before it's done being written\r\n  let outstandingWrites = 0;\r\n\r\n  this._parser.on('data', (buffer) => {\r\n    this.pause();\r\n    outstandingWrites += 1;\r\n\r\n    file.write(buffer, () => {\r\n      outstandingWrites -= 1;\r\n      this.resume();\r\n\r\n      if (this.ended) {\r\n        this._parser.emit('doneWritingFile');\r\n      }\r\n    });\r\n  });\r\n\r\n  this._parser.on('end', () => {\r\n    this._flushing -= 1;\r\n    this.ended = true;\r\n\r\n    const done = () => {\r\n      file.end(() => {\r\n        this.emit('file', 'file', file);\r\n        this._maybeEnd();\r\n      });\r\n    };\r\n\r\n    if (outstandingWrites === 0) {\r\n      done();\r\n    } else {\r\n      this._parser.once('doneWritingFile', done);\r\n    }\r\n  });\r\n\r\n  return this;\r\n}\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport { Transform } from 'node:stream';\r\n\r\n// This is a buffering parser, have a look at StreamingQuerystring.js for a streaming parser\r\nclass QuerystringParser extends Transform {\r\n  constructor(options = {}) {\r\n    super({ readableObjectMode: true });\r\n    this.globalOptions = { ...options };\r\n    this.buffer = '';\r\n    this.bufferLength = 0;\r\n  }\r\n\r\n  _transform(buffer, encoding, callback) {\r\n    this.buffer += buffer.toString('ascii');\r\n    this.bufferLength = this.buffer.length;\r\n    callback();\r\n  }\r\n\r\n  _flush(callback) {\r\n    const fields = new URLSearchParams(this.buffer);\r\n    for (const [key, value] of fields) {\r\n      this.push({\r\n        key,\r\n        value,\r\n      });\r\n    }\r\n    this.buffer = '';\r\n    callback();\r\n  }\r\n}\r\n\r\nexport default QuerystringParser;\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\n\r\nimport QuerystringParser from '../parsers/Querystring.js';\r\n\r\nexport const querystringType = 'urlencoded';\r\n// the `options` is also available through the `this.options` / `formidable.options`\r\nexport default function plugin(formidable, options) {\r\n  // the `this` context is always formidable, as the first argument of a plugin\r\n  // but this allows us to customize/test each plugin\r\n\r\n  /* istanbul ignore next */\r\n  const self = this || formidable;\r\n\r\n  if (/urlencoded/i.test(self.headers['content-type'])) {\r\n    init.call(self, self, options);\r\n  }\r\n  return self;\r\n};\r\n\r\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\r\n// of the passed `options` (second) param, because when you decide\r\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\r\nfunction init(_self, _opts) {\r\n  this.type = querystringType;\r\n\r\n  const parser = new QuerystringParser(this.options);\r\n\r\n  parser.on('data', ({ key, value }) => {\r\n    this.emit('field', key, value);\r\n  });\r\n\r\n  parser.once('end', () => {\r\n    this.ended = true;\r\n    this._maybeEnd();\r\n  });\r\n\r\n  this._parser = parser;\r\n\r\n  return this;\r\n}\r\n", "const missingPlugin = 1000;\r\nconst pluginFunction = 1001;\r\nconst aborted = 1002;\r\nconst noParser = 1003;\r\nconst uninitializedParser = 1004;\r\nconst filenameNotString = 1005;\r\nconst maxFieldsSizeExceeded = 1006;\r\nconst maxFieldsExceeded = 1007;\r\nconst smallerThanMinFileSize = 1008;\r\nconst biggerThanTotalMaxFileSize = 1009;\r\nconst noEmptyFiles = 1010;\r\nconst missingContentType = 1011;\r\nconst malformedMultipart = 1012;\r\nconst missingMultipartBoundary = 1013;\r\nconst unknownTransferEncoding = 1014;\r\nconst maxFilesExceeded = 1015;\r\nconst biggerThanMaxFileSize = 1016;\r\nconst pluginFailed = 1017;\r\n\r\nconst FormidableError = class extends Error {\r\n  constructor(message, internalCode, httpCode = 500) {\r\n    super(message);\r\n    this.code = internalCode;\r\n    this.httpCode = httpCode;\r\n  }\r\n};\r\n\r\nexport {\r\n  missingPlugin,\r\n  pluginFunction,\r\n  aborted,\r\n  noParser,\r\n  uninitializedParser,\r\n  filenameNotString,\r\n  maxFieldsSizeExceeded,\r\n  maxFieldsExceeded,\r\n  maxFilesExceeded,\r\n  smallerThanMinFileSize,\r\n  biggerThanMaxFileSize,\r\n  noEmptyFiles,\r\n  missingContentType,\r\n  malformedMultipart,\r\n  missingMultipartBoundary,\r\n  unknownTransferEncoding,\r\n  biggerThanTotalMaxFileSize,\r\n  pluginFailed,\r\n};\r\n\r\nexport default FormidableError;\r\n", "/* eslint-disable no-fallthrough */\r\n/* eslint-disable no-bitwise */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nimport { Transform } from 'node:stream';\r\nimport * as errors from '../FormidableError.js';\r\nimport FormidableError from '../FormidableError.js';\r\n\r\nlet s = 0;\r\nconst STATE = {\r\n  PARSER_UNINITIALIZED: s++,\r\n  START: s++,\r\n  START_BOUNDARY: s++,\r\n  HEADER_FIELD_START: s++,\r\n  HEADER_FIELD: s++,\r\n  HEADER_VALUE_START: s++,\r\n  HEADER_VALUE: s++,\r\n  HEADER_VALUE_ALMOST_DONE: s++,\r\n  HEADERS_ALMOST_DONE: s++,\r\n  PART_DATA_START: s++,\r\n  PART_DATA: s++,\r\n  PART_END: s++,\r\n  END: s++,\r\n};\r\n\r\nlet f = 1;\r\nconst FBOUNDARY = { PART_BOUNDARY: f, LAST_BOUNDARY: (f *= 2) };\r\n\r\nconst LF = 10;\r\nconst CR = 13;\r\nconst SPACE = 32;\r\nconst HYPHEN = 45;\r\nconst COLON = 58;\r\nconst A = 97;\r\nconst Z = 122;\r\n\r\nfunction lower(c) {\r\n  return c | 0x20;\r\n}\r\n\r\nexport const STATES = {};\r\n\r\nObject.keys(STATE).forEach((stateName) => {\r\n  STATES[stateName] = STATE[stateName];\r\n});\r\n\r\nclass MultipartParser extends Transform {\r\n  constructor(options = {}) {\r\n    super({ readableObjectMode: true });\r\n    this.boundary = null;\r\n    this.boundaryChars = null;\r\n    this.lookbehind = null;\r\n    this.bufferLength = 0;\r\n    this.state = STATE.PARSER_UNINITIALIZED;\r\n\r\n    this.globalOptions = { ...options };\r\n    this.index = null;\r\n    this.flags = 0;\r\n  }\r\n\r\n  _flush(done) {\r\n    if (\r\n      (this.state === STATE.HEADER_FIELD_START && this.index === 0) ||\r\n      (this.state === STATE.PART_DATA && this.index === this.boundary.length)\r\n    ) {\r\n      this._handleCallback('partEnd');\r\n      this._handleCallback('end');\r\n      done();\r\n    } else if (this.state !== STATE.END) {\r\n      done(\r\n        new FormidableError(\r\n          `MultipartParser.end(): stream ended unexpectedly: ${this.explain()}`,\r\n          errors.malformedMultipart,\r\n          400,\r\n        ),\r\n      );\r\n    }\r\n  }\r\n\r\n  initWithBoundary(str) {\r\n    this.boundary = Buffer.from(`\\r\\n--${str}`);\r\n    this.lookbehind = Buffer.alloc(this.boundary.length + 8);\r\n    this.state = STATE.START;\r\n    this.boundaryChars = {};\r\n\r\n    for (let i = 0; i < this.boundary.length; i++) {\r\n      this.boundaryChars[this.boundary[i]] = true;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line max-params\r\n  _handleCallback(name, buf, start, end) {\r\n    if (start !== undefined && start === end) {\r\n      return;\r\n    }\r\n    this.push({ name, buffer: buf, start, end });\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  _transform(buffer, _, done) {\r\n    let i = 0;\r\n    let prevIndex = this.index;\r\n    let { index, state, flags } = this;\r\n    const { lookbehind, boundary, boundaryChars } = this;\r\n    const boundaryLength = boundary.length;\r\n    const boundaryEnd = boundaryLength - 1;\r\n    this.bufferLength = buffer.length;\r\n    let c = null;\r\n    let cl = null;\r\n\r\n    const setMark = (name, idx) => {\r\n      this[`${name}Mark`] = typeof idx === 'number' ? idx : i;\r\n    };\r\n\r\n    const clearMarkSymbol = (name) => {\r\n      delete this[`${name}Mark`];\r\n    };\r\n\r\n    const dataCallback = (name, shouldClear) => {\r\n      const markSymbol = `${name}Mark`;\r\n      if (!(markSymbol in this)) {\r\n        return;\r\n      }\r\n\r\n      if (!shouldClear) {\r\n        this._handleCallback(name, buffer, this[markSymbol], buffer.length);\r\n        setMark(name, 0);\r\n      } else {\r\n        this._handleCallback(name, buffer, this[markSymbol], i);\r\n        clearMarkSymbol(name);\r\n      }\r\n    };\r\n\r\n    for (i = 0; i < this.bufferLength; i++) {\r\n      c = buffer[i];\r\n      switch (state) {\r\n        case STATE.PARSER_UNINITIALIZED:\r\n          return i;\r\n        case STATE.START:\r\n          index = 0;\r\n          state = STATE.START_BOUNDARY;\r\n        case STATE.START_BOUNDARY:\r\n          if (index === boundary.length - 2) {\r\n            if (c === HYPHEN) {\r\n              flags |= FBOUNDARY.LAST_BOUNDARY;\r\n            } else if (c !== CR) {\r\n              return i;\r\n            }\r\n            index++;\r\n            break;\r\n          } else if (index - 1 === boundary.length - 2) {\r\n            if (flags & FBOUNDARY.LAST_BOUNDARY && c === HYPHEN) {\r\n              this._handleCallback('end');\r\n              state = STATE.END;\r\n              flags = 0;\r\n            } else if (!(flags & FBOUNDARY.LAST_BOUNDARY) && c === LF) {\r\n              index = 0;\r\n              this._handleCallback('partBegin');\r\n              state = STATE.HEADER_FIELD_START;\r\n            } else {\r\n              return i;\r\n            }\r\n            break;\r\n          }\r\n\r\n          if (c !== boundary[index + 2]) {\r\n            index = -2;\r\n          }\r\n          if (c === boundary[index + 2]) {\r\n            index++;\r\n          }\r\n          break;\r\n        case STATE.HEADER_FIELD_START:\r\n          state = STATE.HEADER_FIELD;\r\n          setMark('headerField');\r\n          index = 0;\r\n        case STATE.HEADER_FIELD:\r\n          if (c === CR) {\r\n            clearMarkSymbol('headerField');\r\n            state = STATE.HEADERS_ALMOST_DONE;\r\n            break;\r\n          }\r\n\r\n          index++;\r\n          if (c === HYPHEN) {\r\n            break;\r\n          }\r\n\r\n          if (c === COLON) {\r\n            if (index === 1) {\r\n              // empty header field\r\n              return i;\r\n            }\r\n            dataCallback('headerField', true);\r\n            state = STATE.HEADER_VALUE_START;\r\n            break;\r\n          }\r\n\r\n          cl = lower(c);\r\n          if (cl < A || cl > Z) {\r\n            return i;\r\n          }\r\n          break;\r\n        case STATE.HEADER_VALUE_START:\r\n          if (c === SPACE) {\r\n            break;\r\n          }\r\n\r\n          setMark('headerValue');\r\n          state = STATE.HEADER_VALUE;\r\n        case STATE.HEADER_VALUE:\r\n          if (c === CR) {\r\n            dataCallback('headerValue', true);\r\n            this._handleCallback('headerEnd');\r\n            state = STATE.HEADER_VALUE_ALMOST_DONE;\r\n          }\r\n          break;\r\n        case STATE.HEADER_VALUE_ALMOST_DONE:\r\n          if (c !== LF) {\r\n            return i;\r\n          }\r\n          state = STATE.HEADER_FIELD_START;\r\n          break;\r\n        case STATE.HEADERS_ALMOST_DONE:\r\n          if (c !== LF) {\r\n            return i;\r\n          }\r\n\r\n          this._handleCallback('headersEnd');\r\n          state = STATE.PART_DATA_START;\r\n          break;\r\n        case STATE.PART_DATA_START:\r\n          state = STATE.PART_DATA;\r\n          setMark('partData');\r\n        case STATE.PART_DATA:\r\n          prevIndex = index;\r\n\r\n          if (index === 0) {\r\n            // boyer-moore derrived algorithm to safely skip non-boundary data\r\n            i += boundaryEnd;\r\n            while (i < this.bufferLength && !(buffer[i] in boundaryChars)) {\r\n              i += boundaryLength;\r\n            }\r\n            i -= boundaryEnd;\r\n            c = buffer[i];\r\n          }\r\n\r\n          if (index < boundary.length) {\r\n            if (boundary[index] === c) {\r\n              if (index === 0) {\r\n                dataCallback('partData', true);\r\n              }\r\n              index++;\r\n            } else {\r\n              index = 0;\r\n            }\r\n          } else if (index === boundary.length) {\r\n            index++;\r\n            if (c === CR) {\r\n              // CR = part boundary\r\n              flags |= FBOUNDARY.PART_BOUNDARY;\r\n            } else if (c === HYPHEN) {\r\n              // HYPHEN = end boundary\r\n              flags |= FBOUNDARY.LAST_BOUNDARY;\r\n            } else {\r\n              index = 0;\r\n            }\r\n          } else if (index - 1 === boundary.length) {\r\n            if (flags & FBOUNDARY.PART_BOUNDARY) {\r\n              index = 0;\r\n              if (c === LF) {\r\n                // unset the PART_BOUNDARY flag\r\n                flags &= ~FBOUNDARY.PART_BOUNDARY;\r\n                this._handleCallback('partEnd');\r\n                this._handleCallback('partBegin');\r\n                state = STATE.HEADER_FIELD_START;\r\n                break;\r\n              }\r\n            } else if (flags & FBOUNDARY.LAST_BOUNDARY) {\r\n              if (c === HYPHEN) {\r\n                this._handleCallback('partEnd');\r\n                this._handleCallback('end');\r\n                state = STATE.END;\r\n                flags = 0;\r\n              } else {\r\n                index = 0;\r\n              }\r\n            } else {\r\n              index = 0;\r\n            }\r\n          }\r\n\r\n          if (index > 0) {\r\n            // when matching a possible boundary, keep a lookbehind reference\r\n            // in case it turns out to be a false lead\r\n            lookbehind[index - 1] = c;\r\n          } else if (prevIndex > 0) {\r\n            // if our boundary turned out to be rubbish, the captured lookbehind\r\n            // belongs to partData\r\n            this._handleCallback('partData', lookbehind, 0, prevIndex);\r\n            prevIndex = 0;\r\n            setMark('partData');\r\n\r\n            // reconsider the current character even so it interrupted the sequence\r\n            // it could be the beginning of a new sequence\r\n            i--;\r\n          }\r\n\r\n          break;\r\n        case STATE.END:\r\n          break;\r\n        default:\r\n          return i;\r\n      }\r\n    }\r\n\r\n    dataCallback('headerField');\r\n    dataCallback('headerValue');\r\n    dataCallback('partData');\r\n\r\n    this.index = index;\r\n    this.state = state;\r\n    this.flags = flags;\r\n\r\n    done();\r\n    return this.bufferLength;\r\n  }\r\n\r\n  explain() {\r\n    return `state = ${MultipartParser.stateToString(this.state)}`;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line consistent-return\r\nMultipartParser.stateToString = (stateNumber) => {\r\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\r\n  for (const stateName in STATE) {\r\n    const number = STATE[stateName];\r\n    if (number === stateNumber) return stateName;\r\n  }\r\n};\r\n\r\nexport default Object.assign(MultipartParser, { STATES });\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport { Stream } from 'node:stream';\r\nimport MultipartParser from '../parsers/Multipart.js';\r\nimport * as errors from '../FormidableError.js';\r\nimport FormidableError from '../FormidableError.js';\r\n\r\nexport const multipartType = 'multipart';\r\n// the `options` is also available through the `options` / `formidable.options`\r\nexport default function plugin(formidable, options) {\r\n  // the `this` context is always formidable, as the first argument of a plugin\r\n  // but this allows us to customize/test each plugin\r\n\r\n  /* istanbul ignore next */\r\n  const self = this || formidable;\r\n\r\n  // NOTE: we (currently) support both multipart/form-data and multipart/related\r\n  const multipart = /multipart/i.test(self.headers['content-type']);\r\n\r\n  if (multipart) {\r\n    const m = self.headers['content-type'].match(\r\n      /boundary=(?:\"([^\"]+)\"|([^;]+))/i,\r\n    );\r\n    if (m) {\r\n      const initMultipart = createInitMultipart(m[1] || m[2]);\r\n      initMultipart.call(self, self, options); // lgtm [js/superfluous-trailing-arguments]\r\n    } else {\r\n      const err = new FormidableError(\r\n        'bad content-type header, no multipart boundary',\r\n        errors.missingMultipartBoundary,\r\n        400,\r\n      );\r\n      self._error(err);\r\n    }\r\n  }\r\n  return self;\r\n}\r\n\r\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\r\n// of the passed `options` (second) param, because when you decide\r\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\r\nfunction createInitMultipart(boundary) {\r\n  return function initMultipart() {\r\n    this.type = multipartType;\r\n\r\n    const parser = new MultipartParser(this.options);\r\n    let headerField;\r\n    let headerValue;\r\n    let part;\r\n\r\n    parser.initWithBoundary(boundary);\r\n\r\n    // eslint-disable-next-line max-statements, consistent-return\r\n    parser.on('data', ({ name, buffer, start, end }) => {\r\n      if (name === 'partBegin') {\r\n        part = new Stream();\r\n        part.readable = true;\r\n        part.headers = {};\r\n        part.name = null;\r\n        part.originalFilename = null;\r\n        part.mimetype = null;\r\n\r\n        part.transferEncoding = this.options.encoding;\r\n        part.transferBuffer = '';\r\n\r\n        headerField = '';\r\n        headerValue = '';\r\n      } else if (name === 'headerField') {\r\n        headerField += buffer.toString(this.options.encoding, start, end);\r\n      } else if (name === 'headerValue') {\r\n        headerValue += buffer.toString(this.options.encoding, start, end);\r\n      } else if (name === 'headerEnd') {\r\n        headerField = headerField.toLowerCase();\r\n        part.headers[headerField] = headerValue;\r\n\r\n        // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\r\n        const m = headerValue.match(\r\n          // eslint-disable-next-line no-useless-escape\r\n          /\\bname=(\"([^\"]*)\"|([^\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\s\\t/]+))/i,\r\n        );\r\n        if (headerField === 'content-disposition') {\r\n          if (m) {\r\n            part.name = m[2] || m[3] || '';\r\n          }\r\n\r\n          part.originalFilename = this._getFileName(headerValue);\r\n        } else if (headerField === 'content-type') {\r\n          part.mimetype = headerValue;\r\n        } else if (headerField === 'content-transfer-encoding') {\r\n          part.transferEncoding = headerValue.toLowerCase();\r\n        }\r\n\r\n        headerField = '';\r\n        headerValue = '';\r\n      } else if (name === 'headersEnd') {\r\n        switch (part.transferEncoding) {\r\n          case 'binary':\r\n          case '7bit':\r\n          case '8bit':\r\n          case 'utf-8': {\r\n            const dataPropagation = (ctx) => {\r\n              if (ctx.name === 'partData') {\r\n                part.emit('data', ctx.buffer.slice(ctx.start, ctx.end));\r\n              }\r\n            };\r\n            const dataStopPropagation = (ctx) => {\r\n              if (ctx.name === 'partEnd') {\r\n                part.emit('end');\r\n                parser.off('data', dataPropagation);\r\n                parser.off('data', dataStopPropagation);\r\n              }\r\n            };\r\n            parser.on('data', dataPropagation);\r\n            parser.on('data', dataStopPropagation);\r\n            break;\r\n          }\r\n          case 'base64': {\r\n            const dataPropagation = (ctx) => {\r\n              if (ctx.name === 'partData') {\r\n                part.transferBuffer += ctx.buffer\r\n                  .slice(ctx.start, ctx.end)\r\n                  .toString('ascii');\r\n\r\n                /*\r\n                  four bytes (chars) in base64 converts to three bytes in binary\r\n                  encoding. So we should always work with a number of bytes that\r\n                  can be divided by 4, it will result in a number of buytes that\r\n                  can be divided vy 3.\r\n                  */\r\n                const offset = parseInt(part.transferBuffer.length / 4, 10) * 4;\r\n                part.emit(\r\n                  'data',\r\n                  Buffer.from(\r\n                    part.transferBuffer.substring(0, offset),\r\n                    'base64',\r\n                  ),\r\n                );\r\n                part.transferBuffer = part.transferBuffer.substring(offset);\r\n              }\r\n            };\r\n            const dataStopPropagation = (ctx) => {\r\n              if (ctx.name === 'partEnd') {\r\n                part.emit('data', Buffer.from(part.transferBuffer, 'base64'));\r\n                part.emit('end');\r\n                parser.off('data', dataPropagation);\r\n                parser.off('data', dataStopPropagation);\r\n              }\r\n            };\r\n            parser.on('data', dataPropagation);\r\n            parser.on('data', dataStopPropagation);\r\n            break;\r\n          }\r\n          default:\r\n            return this._error(\r\n              new FormidableError(\r\n                'unknown transfer-encoding',\r\n                errors.unknownTransferEncoding,\r\n                501,\r\n              ),\r\n            );\r\n        }\r\n\r\n        this.onPart(part);\r\n      } else if (name === 'end') {\r\n        this.ended = true;\r\n        this._maybeEnd();\r\n      }\r\n    });\r\n\r\n    this._parser = parser;\r\n  };\r\n}\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport { Transform } from 'node:stream';\r\n\r\nclass JSONParser extends Transform {\r\n  constructor(options = {}) {\r\n    super({ readableObjectMode: true });\r\n    this.chunks = [];\r\n    this.globalOptions = { ...options };\r\n  }\r\n\r\n  _transform(chunk, encoding, callback) {\r\n    this.chunks.push(String(chunk)); // todo consider using a string decoder\r\n    callback();\r\n  }\r\n\r\n  _flush(callback) {\r\n    try {\r\n      const fields = JSON.parse(this.chunks.join(''));\r\n      this.push(fields);\r\n    } catch (e) {\r\n      callback(e);\r\n      return;\r\n    }\r\n    this.chunks = null;\r\n    callback();\r\n  }\r\n}\r\n\r\nexport default JSONParser;\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport JSONParser from '../parsers/JSON.js';\r\n\r\nexport const jsonType = 'json';\r\n// the `options` is also available through the `this.options` / `formidable.options`\r\nexport default function plugin(formidable, options) {\r\n  // the `this` context is always formidable, as the first argument of a plugin\r\n  // but this allows us to customize/test each plugin\r\n\r\n  /* istanbul ignore next */\r\n  const self = this || formidable;\r\n\r\n  if (/json/i.test(self.headers['content-type'])) {\r\n    init.call(self, self, options);\r\n  }\r\n\r\n  return self;\r\n};\r\n\r\n// Note that it's a good practice (but it's up to you) to use the `this.options` instead\r\n// of the passed `options` (second) param, because when you decide\r\n// to test the plugin you can pass custom `this` context to it (and so `this.options`)\r\nfunction init(_self, _opts) {\r\n  this.type = jsonType;\r\n\r\n  const parser = new JSONParser(this.options);\r\n\r\n  parser.on('data', (fields) => {\r\n    this.fields = fields;\r\n  });\r\n\r\n  parser.once('end', () => {\r\n    this.ended = true;\r\n    this._maybeEnd();\r\n  });\r\n\r\n  this._parser = parser;\r\n}\r\n", "import octetstream from './octetstream.js';\r\nimport querystring from './querystring.js';\r\nimport multipart from './multipart.js';\r\nimport json from './json.js';\r\n\r\nexport { octetstream, querystring, multipart, json };\r\n", "/* eslint-disable no-underscore-dangle */\r\n\r\nimport { Transform } from 'node:stream';\r\n\r\nclass DummyParser extends Transform {\r\n  constructor(incomingForm, options = {}) {\r\n    super();\r\n    this.globalOptions = { ...options };\r\n    this.incomingForm = incomingForm;\r\n  }\r\n\r\n  _flush(callback) {\r\n    this.incomingForm.ended = true;\r\n    this.incomingForm._maybeEnd();\r\n    callback();\r\n  }\r\n}\r\n\r\nexport default DummyParser;\r\n", "/* eslint-disable class-methods-use-this */\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nimport os from 'node:os';\r\nimport path from 'node:path';\r\nimport { EventEmitter } from 'node:events';\r\nimport { StringDecoder } from 'node:string_decoder';\r\nimport hexoid from 'hexoid';\r\nimport once from 'once';\r\nimport dezalgo from 'dezalgo';\r\nimport { octetstream, querystring, multipart, json } from './plugins/index.js';\r\nimport PersistentFile from './PersistentFile.js';\r\nimport VolatileFile from './VolatileFile.js';\r\nimport DummyParser from './parsers/Dummy.js';\r\nimport MultipartParser from './parsers/Multipart.js';\r\nimport * as errors from './FormidableError.js';\r\nimport FormidableError from './FormidableError.js';\r\n\r\nconst toHexoId = hexoid(25);\r\nconst DEFAULT_OPTIONS = {\r\n  maxFields: 1000,\r\n  maxFieldsSize: 20 * 1024 * 1024,\r\n  maxFiles: Infinity,\r\n  maxFileSize: 200 * 1024 * 1024,\r\n  maxTotalFileSize: undefined,\r\n  minFileSize: 1,\r\n  allowEmptyFiles: false,\r\n  keepExtensions: false,\r\n  encoding: 'utf-8',\r\n  hashAlgorithm: false,\r\n  uploadDir: os.tmpdir(),\r\n  enabledPlugins: [octetstream, querystring, multipart, json],\r\n  fileWriteStreamHandler: null,\r\n  defaultInvalidName: 'invalid-name',\r\n  filter(_part) {\r\n    return true;\r\n  },\r\n  filename: undefined,\r\n};\r\n\r\nfunction hasOwnProp(obj, key) {\r\n  return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nconst invalidExtensionChar = (c) => {\r\n  const code = c.charCodeAt(0);\r\n  return !(\r\n    code === 46 || // .\r\n    (code >= 48 && code <= 57) ||\r\n    (code >= 65 && code <= 90) ||\r\n    (code >= 97 && code <= 122)\r\n  );\r\n};\r\n\r\nclass IncomingForm extends EventEmitter {\r\n  constructor(options = {}) {\r\n    super();\r\n\r\n    this.options = { ...DEFAULT_OPTIONS, ...options };\r\n    if (!this.options.maxTotalFileSize) {\r\n      this.options.maxTotalFileSize = this.options.maxFileSize\r\n    }\r\n\r\n    const dir = path.resolve(\r\n      this.options.uploadDir || this.options.uploaddir || os.tmpdir(),\r\n    );\r\n\r\n    this.uploaddir = dir;\r\n    this.uploadDir = dir;\r\n\r\n    // initialize with null\r\n    [\r\n      'error',\r\n      'headers',\r\n      'type',\r\n      'bytesExpected',\r\n      'bytesReceived',\r\n      '_parser',\r\n      'req',\r\n    ].forEach((key) => {\r\n      this[key] = null;\r\n    });\r\n\r\n    this._setUpRename();\r\n\r\n    this._flushing = 0;\r\n    this._fieldsSize = 0;\r\n    this._totalFileSize = 0;\r\n    this._plugins = [];\r\n    this.openedFiles = [];\r\n\r\n    this.options.enabledPlugins = []\r\n      .concat(this.options.enabledPlugins)\r\n      .filter(Boolean);\r\n\r\n    if (this.options.enabledPlugins.length === 0) {\r\n      throw new FormidableError(\r\n        'expect at least 1 enabled builtin plugin, see options.enabledPlugins',\r\n        errors.missingPlugin,\r\n      );\r\n    }\r\n\r\n    this.options.enabledPlugins.forEach((plugin) => {\r\n      this.use(plugin);\r\n    });\r\n\r\n    this._setUpMaxFields();\r\n    this._setUpMaxFiles();\r\n    this.ended = undefined;\r\n    this.type = undefined;\r\n  }\r\n\r\n  use(plugin) {\r\n    if (typeof plugin !== 'function') {\r\n      throw new FormidableError(\r\n        '.use: expect `plugin` to be a function',\r\n        errors.pluginFunction,\r\n      );\r\n    }\r\n    this._plugins.push(plugin.bind(this));\r\n    return this;\r\n  }\r\n\r\n  pause () {\r\n    try {\r\n      this.req.pause();\r\n    } catch (err) {\r\n      // the stream was destroyed\r\n      if (!this.ended) {\r\n        // before it was completed, crash & burn\r\n        this._error(err);\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  resume () {\r\n    try {\r\n      this.req.resume();\r\n    } catch (err) {\r\n      // the stream was destroyed\r\n      if (!this.ended) {\r\n        // before it was completed, crash & burn\r\n        this._error(err);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  parse(req, cb) {\r\n    this.req = req;\r\n\r\n    // Setup callback first, so we don't miss anything from data events emitted immediately.\r\n    if (cb) {\r\n      const callback = once(dezalgo(cb));\r\n      this.fields = {};\r\n      const files = {};\r\n\r\n      this.on('field', (name, value) => {\r\n        if (this.type === 'multipart' || this.type === 'urlencoded') {\r\n          if (!hasOwnProp(this.fields, name)) {\r\n            this.fields[name] = [value];\r\n          } else {\r\n            this.fields[name].push(value);\r\n          }\r\n        } else {\r\n          this.fields[name] = value;\r\n        }\r\n      });\r\n      this.on('file', (name, file) => {\r\n        if (!hasOwnProp(files, name)) {\r\n          files[name] = [file];\r\n        } else {\r\n          files[name].push(file);\r\n        }\r\n      });\r\n      this.on('error', (err) => {\r\n        callback(err, this.fields, files);\r\n      });\r\n      this.on('end', () => {\r\n        callback(null, this.fields, files);\r\n      });\r\n    }\r\n\r\n    // Parse headers and setup the parser, ready to start listening for data.\r\n    this.writeHeaders(req.headers);\r\n\r\n    // Start listening for data.\r\n    req\r\n      .on('error', (err) => {\r\n        this._error(err);\r\n      })\r\n      .on('aborted', () => {\r\n        this.emit('aborted');\r\n        this._error(new FormidableError('Request aborted', errors.aborted));\r\n      })\r\n      .on('data', (buffer) => {\r\n        try {\r\n          this.write(buffer);\r\n        } catch (err) {\r\n          this._error(err);\r\n        }\r\n      })\r\n      .on('end', () => {\r\n        if (this.error) {\r\n          return;\r\n        }\r\n        if (this._parser) {\r\n          this._parser.end();\r\n        }\r\n      });\r\n\r\n    return this;\r\n  }\r\n\r\n  writeHeaders(headers) {\r\n    this.headers = headers;\r\n    this._parseContentLength();\r\n    this._parseContentType();\r\n\r\n    if (!this._parser) {\r\n      this._error(\r\n        new FormidableError(\r\n          'no parser found',\r\n          errors.noParser,\r\n          415, // Unsupported Media Type\r\n        ),\r\n      );\r\n      return;\r\n    }\r\n\r\n    this._parser.once('error', (error) => {\r\n      this._error(error);\r\n    });\r\n  }\r\n\r\n  write(buffer) {\r\n    if (this.error) {\r\n      return null;\r\n    }\r\n    if (!this._parser) {\r\n      this._error(\r\n        new FormidableError('uninitialized parser', errors.uninitializedParser),\r\n      );\r\n      return null;\r\n    }\r\n\r\n    this.bytesReceived += buffer.length;\r\n    this.emit('progress', this.bytesReceived, this.bytesExpected);\r\n\r\n    this._parser.write(buffer);\r\n\r\n    return this.bytesReceived;\r\n  }\r\n\r\n  onPart(part) {\r\n    // this method can be overwritten by the user\r\n    this._handlePart(part);\r\n  }\r\n\r\n  _handlePart(part) {\r\n    if (part.originalFilename && typeof part.originalFilename !== 'string') {\r\n      this._error(\r\n        new FormidableError(\r\n          `the part.originalFilename should be string when it exists`,\r\n          errors.filenameNotString,\r\n        ),\r\n      );\r\n      return;\r\n    }\r\n\r\n    // This MUST check exactly for undefined. You can not change it to !part.originalFilename.\r\n\r\n    // todo: uncomment when switch tests to Jest\r\n    // console.log(part);\r\n\r\n    // ? NOTE(@tunnckocore): no it can be any falsey value, it most probably depends on what's returned\r\n    // from somewhere else. Where recently I changed the return statements\r\n    // and such thing because code style\r\n    // ? NOTE(@tunnckocore): or even better, if there is no mimetype, then it's for sure a field\r\n    // ? NOTE(@tunnckocore): originalFilename is an empty string when a field?\r\n    if (!part.mimetype) {\r\n      let value = '';\r\n      const decoder = new StringDecoder(\r\n        part.transferEncoding || this.options.encoding,\r\n      );\r\n\r\n      part.on('data', (buffer) => {\r\n        this._fieldsSize += buffer.length;\r\n        if (this._fieldsSize > this.options.maxFieldsSize) {\r\n          this._error(\r\n            new FormidableError(\r\n              `options.maxFieldsSize (${this.options.maxFieldsSize} bytes) exceeded, received ${this._fieldsSize} bytes of field data`,\r\n              errors.maxFieldsSizeExceeded,\r\n              413, // Payload Too Large\r\n            ),\r\n          );\r\n          return;\r\n        }\r\n        value += decoder.write(buffer);\r\n      });\r\n\r\n      part.on('end', () => {\r\n        this.emit('field', part.name, value);\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!this.options.filter(part)) {\r\n      return;\r\n    }\r\n\r\n    this._flushing += 1;\r\n\r\n    let fileSize = 0;\r\n    const newFilename = this._getNewName(part);\r\n    const filepath = this._joinDirectoryName(newFilename);\r\n    const file = this._newFile({\r\n      newFilename,\r\n      filepath,\r\n      originalFilename: part.originalFilename,\r\n      mimetype: part.mimetype,\r\n    });\r\n    file.on('error', (err) => {\r\n      this._error(err);\r\n    });\r\n    this.emit('fileBegin', part.name, file);\r\n\r\n    file.open();\r\n    this.openedFiles.push(file);\r\n\r\n    part.on('data', (buffer) => {\r\n      this._totalFileSize += buffer.length;\r\n      fileSize += buffer.length;\r\n      \r\n      if (this._totalFileSize > this.options.maxTotalFileSize) {\r\n        this._error(\r\n          new FormidableError(\r\n            `options.maxTotalFileSize (${this.options.maxTotalFileSize} bytes) exceeded, received ${this._totalFileSize} bytes of file data`,\r\n            errors.biggerThanTotalMaxFileSize,\r\n            413,\r\n          ),\r\n        );\r\n        return;\r\n      }\r\n      if (buffer.length === 0) {\r\n        return;\r\n      }\r\n      this.pause();\r\n      file.write(buffer, () => {\r\n        this.resume();\r\n      });\r\n    });\r\n\r\n    part.on('end', () => {\r\n      if (!this.options.allowEmptyFiles && fileSize === 0) {\r\n        this._error(\r\n          new FormidableError(\r\n            `options.allowEmptyFiles is false, file size should be greather than 0`,\r\n            errors.noEmptyFiles,\r\n            400,\r\n          ),\r\n        );\r\n        return;\r\n      }\r\n      if (fileSize < this.options.minFileSize) {\r\n        this._error(\r\n          new FormidableError(\r\n            `options.minFileSize (${this.options.minFileSize} bytes) inferior, received ${fileSize} bytes of file data`,\r\n            errors.smallerThanMinFileSize,\r\n            400,\r\n          ),\r\n        );\r\n        return;\r\n      }\r\n      if (fileSize > this.options.maxFileSize) {\r\n        this._error(\r\n          new FormidableError(\r\n            `options.maxFileSize (${this.options.maxFileSize} bytes), received ${fileSize} bytes of file data`,\r\n            errors.biggerThanMaxFileSize,\r\n            413,\r\n          ),\r\n        );\r\n        return;\r\n      }\r\n\r\n      file.end(() => {\r\n        this._flushing -= 1;\r\n        this.emit('file', part.name, file);\r\n        this._maybeEnd();\r\n      });\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line max-statements\r\n  _parseContentType() {\r\n    if (this.bytesExpected === 0) {\r\n      this._parser = new DummyParser(this, this.options);\r\n      return;\r\n    }\r\n\r\n    if (!this.headers['content-type']) {\r\n      this._error(\r\n        new FormidableError(\r\n          'bad content-type header, no content-type',\r\n          errors.missingContentType,\r\n          400,\r\n        ),\r\n      );\r\n      return;\r\n    }\r\n\r\n\r\n    new DummyParser(this, this.options);\r\n\r\n    const results = [];\r\n    this._plugins.forEach((plugin, idx) => {\r\n      let pluginReturn = null;\r\n      try {\r\n        pluginReturn = plugin(this, this.options) || this;\r\n      } catch (err) {\r\n        // directly throw from the `form.parse` method;\r\n        // there is no other better way, except a handle through options\r\n        const error = new FormidableError(\r\n          `plugin on index ${idx} failed with: ${err.message}`,\r\n          errors.pluginFailed,\r\n          500,\r\n        );\r\n        error.idx = idx;\r\n        throw error;\r\n      }\r\n      Object.assign(this, pluginReturn);\r\n\r\n      // todo: use Set/Map and pass plugin name instead of the `idx` index\r\n      this.emit('plugin', idx, pluginReturn);\r\n    });\r\n    this.emit('pluginsResults', results);\r\n  }\r\n\r\n  _error(err, eventName = 'error') {\r\n    if (this.error || this.ended) {\r\n      return;\r\n    }\r\n\r\n    this.req = null;\r\n    this.error = err;\r\n    this.emit(eventName, err);\r\n\r\n    this.openedFiles.forEach((file) => {\r\n      file.destroy();\r\n    });\r\n  }\r\n\r\n  _parseContentLength() {\r\n    this.bytesReceived = 0;\r\n    if (this.headers['content-length']) {\r\n      this.bytesExpected = parseInt(this.headers['content-length'], 10);\r\n    } else if (this.headers['transfer-encoding'] === undefined) {\r\n      this.bytesExpected = 0;\r\n    }\r\n\r\n    if (this.bytesExpected !== null) {\r\n      this.emit('progress', this.bytesReceived, this.bytesExpected);\r\n    }\r\n  }\r\n\r\n  _newParser() {\r\n    return new MultipartParser(this.options);\r\n  }\r\n\r\n  _newFile({ filepath, originalFilename, mimetype, newFilename }) {\r\n    return this.options.fileWriteStreamHandler\r\n      ? new VolatileFile({\r\n          newFilename,\r\n          filepath,\r\n          originalFilename,\r\n          mimetype,\r\n          createFileWriteStream: this.options.fileWriteStreamHandler,\r\n          hashAlgorithm: this.options.hashAlgorithm,\r\n        })\r\n      : new PersistentFile({\r\n          newFilename,\r\n          filepath,\r\n          originalFilename,\r\n          mimetype,\r\n          hashAlgorithm: this.options.hashAlgorithm,\r\n        });\r\n  }\r\n\r\n  _getFileName(headerValue) {\r\n    // matches either a quoted-string or a token (RFC 2616 section 19.5.1)\r\n    const m = headerValue.match(\r\n      /\\bfilename=(\"(.*?)\"|([^()<>{}[\\]@,;:\"?=\\s/\\t]+))($|;\\s)/i,\r\n    );\r\n    if (!m) return null;\r\n\r\n    const match = m[2] || m[3] || '';\r\n    let originalFilename = match.substr(match.lastIndexOf('\\\\') + 1);\r\n    originalFilename = originalFilename.replace(/%22/g, '\"');\r\n    originalFilename = originalFilename.replace(/&#([\\d]{4});/g, (_, code) =>\r\n      String.fromCharCode(code),\r\n    );\r\n\r\n    return originalFilename;\r\n  }\r\n\r\n  // able to get composed extension with multiple dots\r\n  // \"a.b.c\" -> \".b.c\"\r\n  // as opposed to path.extname -> \".c\"\r\n  _getExtension(str) {\r\n    if (!str) {\r\n      return '';\r\n    }\r\n\r\n    const basename = path.basename(str);\r\n    const firstDot = basename.indexOf('.');\r\n    const lastDot = basename.lastIndexOf('.');\r\n    let rawExtname = path.extname(basename);\r\n\r\n    if (firstDot !== lastDot) {\r\n      rawExtname =  basename.slice(firstDot);\r\n    }\r\n\r\n    let filtered;\r\n    const firstInvalidIndex = Array.from(rawExtname).findIndex(invalidExtensionChar);\r\n    if (firstInvalidIndex === -1) {\r\n      filtered = rawExtname;\r\n    } else {\r\n      filtered = rawExtname.substring(0, firstInvalidIndex);\r\n    }\r\n    if (filtered === '.') {\r\n      return '';\r\n    }\r\n    return filtered;\r\n  }\r\n\r\n  _joinDirectoryName(name) {\r\n    const newPath = path.join(this.uploadDir, name);\r\n\r\n    // prevent directory traversal attacks\r\n    if (!newPath.startsWith(this.uploadDir)) {\r\n      return path.join(this.uploadDir, this.options.defaultInvalidName);\r\n    }\r\n\r\n    return newPath;\r\n  }\r\n\r\n  _setUpRename() {\r\n    const hasRename = typeof this.options.filename === 'function';\r\n    if (hasRename) {\r\n      this._getNewName = (part) => {\r\n        let ext = '';\r\n        let name = this.options.defaultInvalidName;\r\n        if (part.originalFilename) {\r\n          // can be null\r\n          ({ ext, name } = path.parse(part.originalFilename));\r\n          if (this.options.keepExtensions !== true) {\r\n            ext = '';\r\n          }\r\n        }\r\n        return this.options.filename.call(this, name, ext, part, this);\r\n      };\r\n    } else {\r\n      this._getNewName = (part) => {\r\n        const name = toHexoId();\r\n\r\n        if (part && this.options.keepExtensions) {\r\n          const originalFilename =\r\n            typeof part === 'string' ? part : part.originalFilename;\r\n          return `${name}${this._getExtension(originalFilename)}`;\r\n        }\r\n\r\n        return name;\r\n      };\r\n    }\r\n  }\r\n\r\n  _setUpMaxFields() {\r\n    if (this.options.maxFields !== Infinity) {\r\n      let fieldsCount = 0;\r\n      this.on('field', () => {\r\n        fieldsCount += 1;\r\n        if (fieldsCount > this.options.maxFields) {\r\n          this._error(\r\n            new FormidableError(\r\n              `options.maxFields (${this.options.maxFields}) exceeded`,\r\n              errors.maxFieldsExceeded,\r\n              413,\r\n            ),\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _setUpMaxFiles() {\r\n    if (this.options.maxFiles !== Infinity) {\r\n      let fileCount = 0;\r\n      this.on('fileBegin', () => {\r\n        fileCount += 1;\r\n        if (fileCount > this.options.maxFiles) {\r\n          this._error(\r\n            new FormidableError(\r\n              `options.maxFiles (${this.options.maxFiles}) exceeded`,\r\n              errors.maxFilesExceeded,\r\n              413,\r\n            ),\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _maybeEnd() {\r\n    if (!this.ended || this._flushing || this.error) {\r\n      return;\r\n    }\r\n    this.req = null;\r\n    this.emit('end');\r\n  }\r\n}\r\n\r\nexport default IncomingForm;\r\nexport { DEFAULT_OPTIONS };\r\n", "import JSONParser from './JSON.js';\r\nimport DummyParser from './Dummy.js';\r\nimport MultipartParser from './Multipart.js';\r\nimport OctetStreamParser from './OctetStream.js';\r\nimport QueryStringParser from './Querystring.js';\r\n\r\nexport {\r\n  JSONParser,\r\n  DummyParser,\r\n  MultipartParser,\r\n  OctetStreamParser,\r\n  OctetStreamParser as OctetstreamParser,\r\n  QueryStringParser,\r\n  QueryStringParser as QuerystringParser,\r\n};\r\n", "import PersistentFile from './PersistentFile.js';\r\nimport VolatileFile from './VolatileFile.js';\r\nimport Formidable, { DEFAULT_OPTIONS } from './Formidable.js';\r\n\r\n\r\n\r\n// make it available without requiring the `new` keyword\r\n// if you want it access `const formidable.IncomingForm` as v1\r\nconst formidable = (...args) => new Formidable(...args);\r\nconst {enabledPlugins} = DEFAULT_OPTIONS;\r\n\r\nexport default formidable;\r\nexport {\r\n  PersistentFile as File,\r\n  PersistentFile,\r\n  VolatileFile,\r\n  Formidable,\r\n  // alias\r\n  Formidable as IncomingForm,\r\n\r\n  // as named\r\n  formidable,\r\n\r\n\r\n  // misc\r\n  DEFAULT_OPTIONS as defaultOptions,\r\n  enabledPlugins,  \r\n};\r\n\r\nexport * from './parsers/index.js';\r\nexport * from './plugins/index.js';\r\nexport * as errors from './FormidableError.js';"],
  "mappings": "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",
  "names": ["crypto", "fs", "import_node_crypto", "import_node_events", "cb", "once", "f", "dezalgo", "formidable", "self", "import_node_stream", "plugin", "formidable", "self", "init", "import_node_stream", "plugin", "formidable", "self", "import_node_stream", "import_node_stream", "plugin", "formidable", "self", "init", "import_node_stream", "import_node_events", "os", "plugin", "path", "once", "dezalgo"]
}
